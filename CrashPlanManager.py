import socket, time, array, json
from pprint import pprint

def start_handshake(s):
    EPOCH_STR = str(int(time.time()*1000))
    CRASH_PLAN_INIT_VAL = bytearray([0x80,0x63,0x00,0x00,0x00,0x3c])
    CRASH_PLAN_HANDSHAKE_VAL = bytearray([0X2D,0x32,0x35,0x38,0x34,0x35,0x7C,0x63,0x6F,0x6D,0x2E,0x63,0x6F,0x64,0x65,0x34,0x32,0x2E,0x6D,0x65,0x73,0x73,0x61,0x67,0x69,0x6E,0x67,0x2E,0x75,0x69,0x2E,0x6D,0x65,0x73,0x73,0x61,0x67,0x65,0x2E,0x53,0x65,0x74,0x4D,0x65,0x73,0x73,0x61,0x67,0x65,0x54,0x79,0x70,0x65,0x4D,0x65,0x73,0x73,0x61,0x67,0x65,0x9B,0x0B,0x00,0x00,0x00,0x3D,0x63,0x6F,0x6D,0x2E,0x62,0x61,0x63,0x6B,0x75,0x70,0x34,0x32,0x2E,0x73,0x65,0x72,0x76,0x69,0x63,0x65,0x2E,0x75,0x69,0x2E,0x6D,0x65,0x73,0x73,0x61,0x67,0x65,0x2E,0x49,0x53,0x65,0x72,0x76,0x69,0x63,0x65,0x4D,0x65,0x73,0x73,0x61,0x67,0x65,0x7C])
    CRASH_PLAN_HANDSHAKE_VAL.extend(bytes(EPOCH_STR))
    CRASH_PLAN_POSTHANDSHAKE_VAL = bytearray([0x80,0x63,0x00,0x00,0x00,0x38])
    sentBytes = s.send(CRASH_PLAN_INIT_VAL)
    #print "sent data:", sentBytes

    sentBytes = s.send(CRASH_PLAN_HANDSHAKE_VAL)
    #print "sent data:", sentBytes

    data = s.recv(6)
    #print "received data:", ":".join(x.encode('hex') for x in data)

    data = s.recv(71)
    #print "received data:", ":".join(x.encode('hex') for x in data)

    sentBytes = s.send(CRASH_PLAN_POSTHANDSHAKE_VAL)
    #print "sent data:", sentBytes
    return

def authenticate(s,token,username,userdata,userdesktop):
    AUTH_HEAD = bytearray([0x33,0x30,0x38,0x38,0x37,0x7C,0x63,0x6F,0x6D,0x2E,0x62,0x61,0x63,0x6B,0x75,0x70,0x34,0x32,0x2E,0x73,0x65,0x72,0x76,0x69,0x63,0x65,0x2E,0x75,0x69,0x2E,0x6D,0x65,0x73,0x73,0x61,0x67,0x65,0x2E,0x53,0x74,0x61,0x74,0x75,0x73,0x51,0x75,0x65,0x72,0x79,0x4D,0x65,0x73,0x73,0x61,0x67,0x65,0x78,0xA7,0x00,0x00,0x00,0x5A,0x43,0x50,0x44,0x7C])
    AUTH_HEAD.extend(bytes(token))
    AUTH_HEAD.extend('|')
    AUTH_HEAD.extend(bytes(username))
    AUTH_HEAD.extend('|')
    AUTH_HEAD.extend(bytes(userdata))
    AUTH_HEAD.extend('|')
    AUTH_HEAD.extend(bytes(userdesktop))
    sentBytes = s.send(AUTH_HEAD)
    print "sent data:", sentBytes

    data = s.recv(6)
    print "received data:", ":".join(x.encode('hex') for x in data)
    return

def get_backup_stats_summary_message(s):
    SUMMARY_REQUEST = array.array("B","00aced000577080b25334e5d229bbd80630000004232343534397c636f6d2e6261636b757034322e736572766963652e75692e6d6573736167652e4765744261636b7570537461747353756d6d6172794d6573736167655fe500000000")
   
    sentBytes = s.send(SUMMARY_REQUEST)
    print "sent data:", sentBytes

    data = s.recv(232)
    print "received data:", "".join(x.encode('hex') for x in data)
    return


with open('config.json') as data_file:    
    config = json.load(data_file)

s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
s.connect((config["ip"],config["port"]))

start_handshake(s)
authenticate(s,config["token"],config["username"],config["userfolder"],config["userdesktop"])

data = s.recv(2142)
print "received data:", "".join(x.encode('hex') for x in data)

sentBytes = s.send(bytearray([0x80,0x63,0x00,0x00,0x00,0x3a]))
print "sent data:", sentBytes

data = s.recv(136)
print "received data:", "".join(x.encode('hex') for x in data)

data = s.recv(6)
print "received data:", "".join(x.encode('hex') for x in data)

sentBytes = s.send(bytearray([0x80,0x63,0x00,0x00,0x00,0x32]))
print "sent data:", sentBytes

get_backup_stats_summary_message(s)


s.close()